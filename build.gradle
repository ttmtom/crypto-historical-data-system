plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.flywaydb.flyway' version '11.10.5'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.springframework.boot:spring-boot-starter")
    implementation("com.fasterxml.jackson.core:jackson-databind")
    implementation 'io.hypersistence:hypersistence-utils-hibernate-63:3.8.2'
    runtimeOnly("org.postgresql:postgresql")
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    // Use flyway-core for the core migration engine.
    implementation 'org.flywaydb:flyway-core'
    // Add PostgreSQL support for Flyway
    implementation 'org.flywaydb:flyway-database-postgresql'
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
}

tasks.named('test') {
    useJUnitPlatform()
}

if (file('.env').exists()) {
    file('.env').readLines().each { line ->
        def parts = line.split('=', 2)
        if (parts.length == 2 && !parts[0].trim().startsWith('#')) {
            project.ext[parts[0].trim()] = parts[1].trim()
        }
    }
}

flyway {
    url = project.hasProperty('DB_URL') ? project.property('DB_URL') : 'jdbc:postgresql://localhost:5432/postgres'
    user = project.hasProperty('DB_USERNAME') ? project.property('DB_USERNAME') : 'timescaledb'
    password = project.hasProperty('DB_PASSWORD') ? project.property('DB_PASSWORD') : 'password'
}
